function triggerGitLabIssueCreation(screenshots) {
    const projectId = 'YOUR_PROJECT_ID';
    const privateToken = 'YOUR_PRIVATE_TOKEN';
    
    let description = 'Details of the incident...';

    // Function to upload a screenshot and get the URL
    const uploadScreenshot = (image) => {
        return fetch(`https://gitlab.com/api/v4/projects/${projectId}/uploads`, {
            method: 'POST',
            headers: {
                'PRIVATE-TOKEN': privateToken,
            },
            body: new FormData().append('file', dataURLtoFile(image, 'screenshot.png')),
        })
        .then(response => response.json())
        .then(data => data.markdown); // This gives the Markdown link to the uploaded image
    };

    // Helper function to convert base64 to a Blob (File)
    const dataURLtoFile = (dataurl, filename) => {
        let arr = dataurl.split(','), mime = arr[0].match(/:(.*?);/)[1],
            bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n);
        while(n--){
            u8arr[n] = bstr.charCodeAt(n);
        }
        return new File([u8arr], filename, {type:mime});
    };

    // Upload all screenshots sequentially and create the issue with the uploaded URLs
    Promise.all(screenshots.map(uploadScreenshot))
        .then(uploadedImages => {
            if (uploadedImages.length > 0) {
                description += '\n\nScreenshots:\n' + uploadedImages.join('\n');
            }

            return fetch(`https://gitlab.com/api/v4/projects/${projectId}/issues`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'PRIVATE-TOKEN': privateToken,
                },
                body: JSON.stringify({
                    title: 'Incident reported via Chrome Extension',
                    description: description,
                }),
            });
        })
        .then(response => response.json())
        .then(data => {
            console.log('GitLab issue created:', data);
            alert(`Incident created successfully: ${data.web_url}`);
        })
        .catch(error => {
            console.error('Error creating GitLab issue:', error);
        });
}
